{"version":3,"sources":["components/Pokemon.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","container","height","margin","borderRadius","display","alignItems","flexDirection","padding","containers","border","image","width","objectWidth","text","fontSize","color","heading","fontWeight","form","input","textAlign","Pokemon","useState","pokemon","setPokemon","pokemonData","setPokemonData","pokemonType","setPokemonType","classes","getPokemon","a","toArray","url","axios","get","res","push","data","types","type","name","console","log","Box","className","onSubmit","e","preventDefault","onChange","target","value","toLowerCase","placeholder","map","Grid","item","lg","sm","xs","src","sprites","alt","Typography","Math","round","weight","game_indices","length","component","background","justifyContent","Header","AppBar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAIMA,EAAYC,YAAW,CAC3BC,UAAW,CACPC,OAAQ,IACRC,OAAQ,GACRC,aAAc,GAEdC,QAAS,OACTC,WAAY,SACZC,cAAe,SACf,QAAQ,CACJC,QAAS,oBAGjBC,WAAY,CACVP,OAAQ,IACRC,OAAQ,GACRC,aAAc,GACdM,OAAQ,kBACRL,QAAS,OACTC,WAAY,SACZC,cAAe,SAEf,QAAQ,CACJC,QAAS,oBAGfG,MAAO,CACHT,OAAQ,IACRU,MAAO,OACPC,YAAa,QACbT,aAAc,iBAElBU,KAAM,CACFC,SAAU,GACVC,MAAO,WAEXC,QAAS,CACPF,SAAU,GACVG,WAAY,IACZF,MAAO,WAETG,KAAM,CACAX,QAAS,IAEfY,MAAO,CACHlB,OAAQ,GACRU,MAAO,IACPG,SAAU,GACVM,UAAW,YAmEFC,EA9DC,WACd,MAA8BC,mBAAS,WAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACMC,EAAU/B,IASVgC,EAAU,uCAAG,gCAAAC,EAAA,6DACXC,EAAU,GADC,SAGTC,EAHS,4CAGkCV,GAHlC,SAIGW,IAAMC,IAAIF,GAJb,OAITG,EAJS,OAKfJ,EAAQK,KAAKD,EAAIE,MACjBV,EAAeQ,EAAIE,KAAKC,MAAM,GAAGC,KAAKC,MACtCf,EAAeM,GAPA,kDASfU,QAAQC,IAAR,MATe,0DAAH,qDAchB,OAFAD,QAAQC,IAAIlB,GAGV,eAACmB,EAAA,EAAD,CAAKC,UAAWhB,EAAQ7B,UAAxB,UACE,sBAAM6C,UAAWhB,EAAQX,KAAM4B,SApBd,SAACC,GACpBA,EAAEC,iBACFlB,KAkBE,SACE,gCACE,uBAAOe,UAAWhB,EAAQV,MACxBqB,KAAK,OACLS,SA3BW,SAACF,GACpBvB,EAAWuB,EAAEG,OAAOC,MAAMC,gBA2BlBC,YAAY,2BAMjB5B,EAAY6B,KAAI,SAAChB,GAEhB,OACE,cAACiB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAA7B,SACA,eAACf,EAAA,EAAD,CAAKC,UAAU,aAAf,UACE,qBAAKe,IAAKtB,EAAKuB,QAAL,cAA+BC,IAAI,UAAUjB,UAAWhB,EAAQnB,QAC1E,eAACkC,EAAA,EAAD,WAAK,cAACmB,EAAA,EAAD,CAAYlB,UAAWhB,EAAQb,QAA/B,oBACL,cAAC+C,EAAA,EAAD,CAAYlB,UAAWhB,EAAQhB,KAA/B,SAAsCc,OACtC,cAACoC,EAAA,EAAD,CAAYlB,UAAWhB,EAAQb,QAA/B,sBACA,eAAC+C,EAAA,EAAD,CAAYlB,UAAWhB,EAAQhB,KAA/B,UAAsC,IAAKmD,KAAKC,MAAoB,IAAd3B,EAAKrC,QAA3D,OACA,cAAC8D,EAAA,EAAD,CAAYlB,UAAWhB,EAAQb,QAA/B,sBACA,eAAC+C,EAAA,EAAD,CAAYlB,UAAWhB,EAAQhB,KAA/B,UAAsC,IAAKmD,KAAKC,MAAM3B,EAAK4B,OAAS,KAApE,UACA,cAACH,EAAA,EAAD,CAAYlB,UAAWhB,EAAQb,QAA/B,iCACA,cAAC+C,EAAA,EAAD,CAAYlB,UAAWhB,EAAQhB,KAA/B,SAAsCyB,EAAK6B,aAAaC,qB,QC3G9DtE,EAAYC,YAAW,CACzBsE,UAAW,CACPC,WAAY,UACZvD,MAAO,SACPd,OAAQ,GACRI,WAAY,SACZkE,eAAgB,UAGpB1D,KAAM,CACFC,SAAU,GACVC,MAAO,aAcAyD,EATA,WACX,IAAM3C,EAAU/B,IAChB,OACI,cAAC2E,EAAA,EAAD,CAAQ5B,UAAWhB,EAAQwC,UAA3B,SACI,cAACN,EAAA,EAAD,CAAYlB,UAAWhB,EAAQhB,KAA/B,yBCRG6D,MATf,WACE,OACE,qCACA,cAAC,EAAD,IACA,cAAC,EAAD,QCEWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab0f35cb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, makeStyles, Typography, Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n      height: 340,\r\n      margin: 10,\r\n      borderRadius: 10,\r\n    //   border: '1px solid black',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      '& > *':{\r\n          padding: '1px 2px 2px 2px'\r\n      }\r\n  },\r\n  containers: {\r\n    height: 340,\r\n    margin: 10,\r\n    borderRadius: 10,\r\n    border: '1px solid black',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n\r\n    '& > *':{\r\n        padding: '1px 2px 2px 2px'\r\n    }\r\n},\r\n  image: {\r\n      height: 180,\r\n      width: '100%',\r\n      objectWidth: 'cover',\r\n      borderRadius: '10px 10px 0 0'\r\n  },      \r\n  text: {\r\n      fontSize: 18,\r\n      color: \"#0075BE\"\r\n  },\r\n  heading: {\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    color: \"#FFCC00\"\r\n  },\r\n  form: {\r\n        padding: 55,\r\n  },\r\n  input: {\r\n      height: 40,\r\n      width: 300,\r\n      fontSize: 18,\r\n      textAlign: 'center'\r\n      \r\n  },\r\n})\r\n\r\nconst Pokemon = () => {\r\n  const [pokemon, setPokemon] = useState(\"pikachu\");\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [pokemonType, setPokemonType] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (e) => {\r\n    setPokemon(e.target.value.toLowerCase());\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    getPokemon();\r\n  };\r\n  const getPokemon = async () => {\r\n    const toArray = [];\r\n    try {\r\n      const url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`;\r\n      const res = await axios.get(url);\r\n      toArray.push(res.data);\r\n      setPokemonType(res.data.types[0].type.name);\r\n      setPokemonData(toArray);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  console.log(pokemonData);\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <label>\r\n          <input className={classes.input}\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            placeholder=\"Enter Pokemon Name\"\r\n          />\r\n        </label>\r\n      </form>\r\n      {/* <ul>{pokemonData}</ul> */}\r\n      {/* <p>{[pokemonData]}</p> */}\r\n      {pokemonData.map((data) => {\r\n\r\n        return (\r\n          <Grid item lg={3} sm={4} xs={12}>\r\n          <Box className=\"containers\">\r\n            <img src={data.sprites[\"front_default\"]} alt=\"pokemon\" className={classes.image}/>\r\n            <Box><Typography className={classes.heading}>Type: </Typography>\r\n            <Typography className={classes.text}>{pokemonType}</Typography></Box>\r\n            <Typography className={classes.heading}>Height: </Typography>\r\n            <Typography className={classes.text}>{\" \"}{Math.round(data.height * 3.9)}\"</Typography>\r\n            <Typography className={classes.heading}>Weight: </Typography>\r\n            <Typography className={classes.text}>{\" \"}{Math.round(data.weight / 4.3)} lbs</Typography>\r\n            <Typography className={classes.heading}>Number Of Battles: </Typography>\r\n            <Typography className={classes.text}>{data.game_indices.length}</Typography>\r\n          </Box>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Pokemon;","\r\nimport {AppBar, Typography, makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        background: '#0A285F',\r\n        color: 'FEFFFF',\r\n        height: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    text: {\r\n        fontSize: 30,\r\n        color: '#D5A100'\r\n    }\r\n    \r\n})\r\n\r\nconst Header = ()=>{\r\n    const classes = useStyles();\r\n    return(\r\n        <AppBar className={classes.component}>   \r\n            <Typography className={classes.text}>PokeDesk</Typography>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\nimport \"./App.css\";\nimport Pokemon from './components/Pokemon';\nimport Header from './components/Header';\n\n\nfunction App() {\n  return (\n    <>\n    <Header/>\n    <Pokemon/>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}